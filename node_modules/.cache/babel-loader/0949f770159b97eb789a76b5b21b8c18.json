{"ast":null,"code":"import _classCallCheck from\"/home/kraven/Documents/oksana/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kraven/Documents/oksana/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/kraven/Documents/oksana/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/kraven/Documents/oksana/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/kraven/Documents/oksana/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Template from\"./Template\";import arr from\"./output\";// const images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\n// const full = images.map((x,index)=>\n// {\n//     return (\n//             <td key={index}>\n//                 {/*<img src={x} alt={'nothing'}/>*/}\n//                 <Template image={x} text={\"kek\"}/>\n//             </td>\n//     );\n// });\nvar full=arr.map(function(x,index){return React.createElement(\"td\",{key:index},React.createElement(Template,{image:x.img_url,text:x.caption,my_key:x.key,key:index}));});var new_arr=[];var i,j,temparray,chunk=3;for(i=0,j=full.length;i<j-4;i+=chunk){temparray=full.slice(i,i+chunk);console.log(temparray);new_arr.push(React.createElement(\"tr\",{key:i},temparray.map(function(x){return x;})));}var TemplatesContainer=/*#__PURE__*/function(_Component){_inherits(TemplatesContainer,_Component);function TemplatesContainer(){_classCallCheck(this,TemplatesContainer);return _possibleConstructorReturn(this,_getPrototypeOf(TemplatesContainer).apply(this,arguments));}_createClass(TemplatesContainer,[{key:\"render\",value:function render(){return new_arr;}}]);return TemplatesContainer;}(Component);export default TemplatesContainer;","map":{"version":3,"sources":["/home/kraven/Documents/oksana/src/components/elements/TemplatesContainer.js"],"names":["React","Component","Template","arr","full","map","x","index","img_url","caption","key","new_arr","i","j","temparray","chunk","length","slice","console","log","push","TemplatesContainer"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,UAAhB,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAACE,GAAJ,CAAQ,SAACC,CAAD,CAAGC,KAAH,CACrB,CACI,MACI,2BAAI,GAAG,CAAEA,KAAT,EACI,oBAAC,QAAD,EAAU,KAAK,CAAED,CAAC,CAACE,OAAnB,CAA4B,IAAI,CAAEF,CAAC,CAACG,OAApC,CAA6C,MAAM,CAAEH,CAAC,CAACI,GAAvD,CAA4D,GAAG,CAAEH,KAAjE,EADJ,CADJ,CAKH,CAPY,CAAb,CASA,GAAII,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,CAAJ,CAAMC,CAAN,CAAQC,SAAR,CAAkBC,KAAK,CAAG,CAA1B,CACA,IAAKH,CAAC,CAAC,CAAF,CAAIC,CAAC,CAACT,IAAI,CAACY,MAAhB,CAAwBJ,CAAC,CAACC,CAAC,CAAC,CAA5B,CAA+BD,CAAC,EAAEG,KAAlC,CAAyC,CACrCD,SAAS,CAAGV,IAAI,CAACa,KAAL,CAAWL,CAAX,CAAaA,CAAC,CAACG,KAAf,CAAZ,CACAG,OAAO,CAACC,GAAR,CAAYL,SAAZ,EACAH,OAAO,CAACS,IAAR,CACI,0BAAI,GAAG,CAAER,CAAT,EAGQE,SAAS,CAACT,GAAV,CAAe,SAAAC,CAAC,CAAG,CACf,MAAOA,CAAAA,CAAP,CACH,CAFD,CAHR,CADJ,EAWH,C,GACKe,CAAAA,kB,4TAEO,CAEL,MAAOV,CAAAA,OAAP,CAEP,C,gCANgCV,S,EAQjC,cAAeoB,CAAAA,kBAAf","sourcesContent":["import React,{Component} from \"react\";\nimport Template from \"./Template\";\nimport arr from \"./output\";\n\n// const images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\n\n// const full = images.map((x,index)=>\n// {\n//     return (\n//             <td key={index}>\n//                 {/*<img src={x} alt={'nothing'}/>*/}\n//                 <Template image={x} text={\"kek\"}/>\n//             </td>\n//     );\n// });\nconst full = arr.map((x,index)=>\n{\n    return (\n        <td key={index}>\n            <Template image={x.img_url} text={x.caption} my_key={x.key} key={index} />\n        </td>\n    );\n});\n\nlet new_arr = [];\nvar i,j,temparray,chunk = 3;\nfor (i=0,j=full.length; i<j-4; i+=chunk) {\n    temparray = full.slice(i,i+chunk);\n    console.log(temparray);\n    new_arr.push(\n        <tr key={i}>\n            {\n\n                temparray.map( x =>{\n                    return x;\n                } )\n            }\n        </tr>\n    )\n\n}\nclass TemplatesContainer extends Component{\n\n    render() {\n\n        return new_arr;\n\n}\n}\nexport default TemplatesContainer;"]},"metadata":{},"sourceType":"module"}
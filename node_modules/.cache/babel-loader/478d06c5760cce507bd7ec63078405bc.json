{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Documents/oksana/src/components/elements/Template.js\";\nimport React, { Component } from \"react\";\nconst numbers = [1, 2, 3, \"kek\"];\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nconst images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\nconst full = images.map((x, index) => {\n  return React.createElement(\"td\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: x,\n    alt: 'nothing',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n});\nlet new_arr = [];\nvar i,\n    j,\n    temparray,\n    chunk = 3;\n\nfor (i = 0, j = full.length; i < j - 4; i += chunk) {\n  temparray = full.slice(i, i + chunk);\n  console.log(temparray);\n  new_arr.push(React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, temparray.map(x => {\n    return x;\n  }))); // do whatever\n}\n\nclass Template extends Component {\n  render() {\n    return new_arr;\n  }\n\n}\n\nexport default Template;","map":{"version":3,"sources":["/home/kraven/Documents/oksana/src/components/elements/Template.js"],"names":["React","Component","numbers","importAll","r","keys","map","images","require","context","full","x","index","new_arr","i","j","temparray","chunk","length","slice","console","log","push","Template","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,MAAMC,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,KAAP,CAAhB;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,SAAOA,CAAC,CAACC,IAAF,GAASC,GAAT,CAAaF,CAAb,CAAP;AACH;;AAED,MAAMG,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACC,OAAR,CAAgB,gBAAhB,EAAkC,KAAlC,EAAyC,oBAAzC,CAAD,CAAxB;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAACD,GAAP,CAAW,CAACK,CAAD,EAAGC,KAAH,KACxB;AACI,SACQ;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB;AAAK,IAAA,GAAG,EAAED,CAAV;AAAa,IAAA,GAAG,EAAE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CADR;AAGH,CALY,CAAb;AAMA,IAAIE,OAAO,GAAG,EAAd;AACA,IAAIC,CAAJ;AAAA,IAAMC,CAAN;AAAA,IAAQC,SAAR;AAAA,IAAkBC,KAAK,GAAG,CAA1B;;AACA,KAAKH,CAAC,GAAC,CAAF,EAAIC,CAAC,GAACL,IAAI,CAACQ,MAAhB,EAAwBJ,CAAC,GAACC,CAAC,GAAC,CAA5B,EAA+BD,CAAC,IAAEG,KAAlC,EAAyC;AACrCD,EAAAA,SAAS,GAAGN,IAAI,CAACS,KAAL,CAAWL,CAAX,EAAaA,CAAC,GAACG,KAAf,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAH,EAAAA,OAAO,CAACS,IAAR,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQN,SAAS,CAACV,GAAV,CAAeK,CAAC,IAAG;AACf,WAAOA,CAAP;AACH,GAFD,CAFR,CADJ,EAHqC,CAcrC;AACH;;AACD,MAAMY,QAAN,SAAuBtB,SAAvB,CAAgC;AAE5BuB,EAAAA,MAAM,GAAG;AACL,WAAOX,OAAP;AAEP;;AAL+B;;AAOhC,eAAeU,QAAf","sourcesContent":["import React,{Component} from \"react\";\nconst numbers = [1,2,3,\"kek\"];\n\nfunction importAll(r) {\n    return r.keys().map(r);\n}\n\nconst images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\n\nconst full = images.map((x,index)=>\n{\n    return (\n            <td key={index}><img src={x} alt={'nothing'}/></td>\n    );\n});\nlet new_arr = [];\nvar i,j,temparray,chunk = 3;\nfor (i=0,j=full.length; i<j-4; i+=chunk) {\n    temparray = full.slice(i,i+chunk);\n    console.log(temparray);\n    new_arr.push(\n        <tr>\n            {\n                temparray.map( x =>{\n                    return x;\n                } )\n            }\n        </tr>\n    )\n\n\n    // do whatever\n}\nclass Template extends Component{\n\n    render() {\n        return new_arr;\n\n}\n}\nexport default Template;"]},"metadata":{},"sourceType":"module"}
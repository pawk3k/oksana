{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Documents/oksana/src/components/elements/TemplatesContainer.js\";\nimport React, { Component } from \"react\";\nimport Template from \"./Template\";\nimport arr from \"./output\";\n\nfunction importAll(r) {\n  return r.keys().map(r);\n} // const images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\n// const full = images.map((x,index)=>\n// {\n//     return (\n//             <td key={index}>\n//                 {/*<img src={x} alt={'nothing'}/>*/}\n//                 <Template image={x} text={\"kek\"}/>\n//             </td>\n//     );\n// });\n\n\nconst full = arr.map((x, index) => {\n  return React.createElement(\"td\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Template, {\n    image: x.img_url,\n    text: x.caption,\n    my_key: x.key,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n});\nlet new_arr = [];\nvar i,\n    j,\n    temparray,\n    chunk = 3;\n\nfor (i = 0, j = full.length; i < j - 4; i += chunk) {\n  temparray = full.slice(i, i + chunk);\n  console.log(temparray);\n  new_arr.push(React.createElement(\"tr\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, temparray.map(x => {\n    return x;\n  })));\n}\n\nclass TemplatesContainer extends Component {\n  render() {\n    return new_arr;\n  }\n\n}\n\nexport default TemplatesContainer;","map":{"version":3,"sources":["/home/kraven/Documents/oksana/src/components/elements/TemplatesContainer.js"],"names":["React","Component","Template","arr","importAll","r","keys","map","full","x","index","img_url","caption","key","new_arr","i","j","temparray","chunk","length","slice","console","log","push","TemplatesContainer","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AACA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,SAAOA,CAAC,CAACC,IAAF,GAASC,GAAT,CAAaF,CAAb,CAAP;AACH,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,IAAI,GAAGL,GAAG,CAACI,GAAJ,CAAQ,CAACE,CAAD,EAAGC,KAAH,KACrB;AACI,SACI;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,CAAC,CAACE,OAAnB;AAA4B,IAAA,IAAI,EAAEF,CAAC,CAACG,OAApC;AAA6C,IAAA,MAAM,EAAEH,CAAC,CAACI,GAAvD;AAA4D,IAAA,GAAG,EAAEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPY,CAAb;AASA,IAAII,OAAO,GAAG,EAAd;AACA,IAAIC,CAAJ;AAAA,IAAMC,CAAN;AAAA,IAAQC,SAAR;AAAA,IAAkBC,KAAK,GAAG,CAA1B;;AACA,KAAKH,CAAC,GAAC,CAAF,EAAIC,CAAC,GAACR,IAAI,CAACW,MAAhB,EAAwBJ,CAAC,GAACC,CAAC,GAAC,CAA5B,EAA+BD,CAAC,IAAEG,KAAlC,EAAyC;AACrCD,EAAAA,SAAS,GAAGT,IAAI,CAACY,KAAL,CAAWL,CAAX,EAAaA,CAAC,GAACG,KAAf,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAH,EAAAA,OAAO,CAACS,IAAR,CACI;AAAI,IAAA,GAAG,EAAER,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,SAAS,CAACV,GAAV,CAAeE,CAAC,IAAG;AACf,WAAOA,CAAP;AACH,GAFD,CAFR,CADJ;AAUH;;AACD,MAAMe,kBAAN,SAAiCvB,SAAjC,CAA0C;AAEtCwB,EAAAA,MAAM,GAAG;AAEL,WAAOX,OAAP;AAEP;;AANyC;;AAQ1C,eAAeU,kBAAf","sourcesContent":["import React,{Component} from \"react\";\nimport Template from \"./Template\";\nimport arr from \"./output\";\nfunction importAll(r) {\n    return r.keys().map(r);\n}\n\n// const images = importAll(require.context('./nefritistore', false, /\\.(png|jpe?g|svg)$/));\n\n// const full = images.map((x,index)=>\n// {\n//     return (\n//             <td key={index}>\n//                 {/*<img src={x} alt={'nothing'}/>*/}\n//                 <Template image={x} text={\"kek\"}/>\n//             </td>\n//     );\n// });\nconst full = arr.map((x,index)=>\n{\n    return (\n        <td key={index}>\n            <Template image={x.img_url} text={x.caption} my_key={x.key} key={index} />\n        </td>\n    );\n});\n\nlet new_arr = [];\nvar i,j,temparray,chunk = 3;\nfor (i=0,j=full.length; i<j-4; i+=chunk) {\n    temparray = full.slice(i,i+chunk);\n    console.log(temparray);\n    new_arr.push(\n        <tr key={i}>\n            {\n                temparray.map( x =>{\n                    return x;\n                } )\n            }\n        </tr>\n    )\n\n}\nclass TemplatesContainer extends Component{\n\n    render() {\n\n        return new_arr;\n\n}\n}\nexport default TemplatesContainer;"]},"metadata":{},"sourceType":"module"}
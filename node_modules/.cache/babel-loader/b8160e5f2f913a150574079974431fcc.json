{"ast":null,"code":"var request = require('request'),\n    Promise = require('bluebird'),\n    async = require('async');\n\nvar userURL = 'https://www.instagram.com/',\n    listURL = 'https://www.instagram.com/explore/tags/',\n    postURL = 'https://www.instagram.com/p/',\n    locURL = 'https://www.instagram.com/explore/locations/',\n    dataExp = /window\\._sharedData\\s?=\\s?({.+);<\\/script>/;\n\nexports.scrapeUserPage = function (username) {\n  return new Promise(function (resolve, reject) {\n    if (!username) return reject(new Error('Argument \"username\" must be specified'));\n    request(userURL + username, function (err, response, body) {\n      var data = scrape(body);\n\n      if (data && data.entry_data && data.entry_data.ProfilePage && data.entry_data.ProfilePage[0] && data.entry_data.ProfilePage[0].graphql && data.entry_data.ProfilePage[0].graphql.user && data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media && data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.count > 0 && data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges) {\n        var edges = data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges;\n        async.waterfall([callback => {\n          var medias = [];\n          edges.forEach(post => {\n            if (post.node.__typename === 'GraphImage' || post.node.__typename === 'GraphSidecar' || post.node.__typename === 'GraphVideo') {\n              medias.push(exports.scrapePostData(post));\n            }\n          });\n          callback(null, medias);\n        }], (err, results) => {\n          resolve({\n            total: results.length,\n            medias: results,\n            user: data.entry_data.ProfilePage[0].graphql.user\n          });\n        });\n      } else {\n        reject(new Error('Error scraping user page \"' + username + '\"'));\n      }\n    });\n  });\n};\n\nexports.deepScrapeTagPage = function (tag) {\n  return new Promise(function (resolve, reject) {\n    exports.scrapeTag(tag).then(function (tagPage) {\n      return Promise.map(tagPage.medias, function (media, i, len) {\n        return exports.scrapePostCode(media.shortcode).then(function (postPage) {\n          tagPage.medias[i] = postPage;\n\n          if (typeof postPage.location !== \"undefined\" && postPage.location.has_public_page) {\n            return exports.scrapeLocation(postPage.location.id).then(function (locationPage) {\n              tagPage.media[i].location = locationPage;\n            }).catch(function (err) {\n              console.log(\"An error occurred calling scrapeLocation inside deepScrapeTagPage\" + \":\" + err);\n            });\n          }\n        }).catch(function (err) {\n          console.log(\"An error occurred calling scrapePostPage inside deepScrapeTagPage\" + \":\" + err);\n        });\n      }).then(function () {\n        resolve(tagPage);\n      }).catch(function (err) {\n        console.log(\"An error occurred resolving tagPage inside deepScrapeTagPage\" + \":\" + err);\n      });\n    }).catch(function (err) {\n      console.log(\"An error occurred calling scrapeTagPage inside deepScrapeTagPage\" + \":\" + err);\n    });\n  });\n};\n\nexports.scrapeTag = function (tag) {\n  return new Promise(function (resolve, reject) {\n    if (!tag) return reject(new Error('Argument \"tag\" must be specified'));\n    var options = {\n      url: listURL + tag,\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.3 (KHTML, like Gecko) Version/8.0 Mobile/12A4345d Safari/600.1.4'\n      }\n    };\n    request(options, function (err, response, body) {\n      if (err) return reject(err);\n      var data = scrape(body);\n      var media = data.entry_data && data.entry_data.TagPage && data.entry_data.TagPage[0].graphql.hashtag.edge_hashtag_to_media;\n\n      if (data && media) {\n        var edges = media.edges;\n        async.waterfall([callback => {\n          var medias = [];\n          edges.forEach(post => {\n            medias.push(exports.scrapePostData(post));\n          });\n          callback(null, medias);\n        }], (err, results) => {\n          resolve({\n            total: results.length,\n            medias: results\n          });\n        });\n      } else {\n        reject(new Error('Error scraping tag page \"' + tag + '\"'));\n      }\n    });\n  });\n};\n\nexports.scrapePostData = function (post) {\n  var scrapedData = {\n    media_id: post.node.id,\n    shortcode: post.node.shortcode,\n    text: post.node.edge_media_to_caption.edges[0] && post.node.edge_media_to_caption.edges[0].node.text,\n    comment_count: post.node.edge_media_to_comment.count,\n    like_count: post.node.edge_liked_by.count,\n    display_url: post.node.display_url,\n    owner_id: post.node.owner.id,\n    date: post.node.taken_at_timestamp,\n    thumbnail: post.node.thumbnail_src,\n    thumbnail_resource: post.node.thumbnail_resources,\n    is_video: post.node.is_video\n  };\n\n  if (post.node.is_video) {\n    scrapedData.video_view_count = post.node.video_view_count;\n  }\n\n  return scrapedData;\n};\n\nexports.scrapePostCode = function (code) {\n  return new Promise(function (resolve, reject) {\n    if (!code) return reject(new Error('Argument \"code\" must be specified'));\n    request(postURL + code, function (err, response, body) {\n      if (err) return reject(err);\n      var data = scrape(body);\n\n      if (data && data.entry_data && data.entry_data.PostPage[0] && data.entry_data.PostPage[0].graphql && data.entry_data.PostPage[0].graphql.shortcode_media) {\n        resolve(data.entry_data.PostPage[0].graphql.shortcode_media);\n      } else {\n        reject(new Error('Error scraping post page \"' + code + '\"'));\n      }\n    });\n  });\n};\n\nexports.scrapeLocation = function (id) {\n  return new Promise(function (resolve, reject) {\n    if (!id) return reject(new Error('Argument \"id\" must be specified'));\n    request(locURL + id, function (err, response, body) {\n      var data = scrape(body);\n\n      if (data && data.entry_data && typeof data.entry_data.LocationsPage !== \"undefined\") {\n        resolve(data.entry_data.LocationsPage[0].location);\n      } else {\n        reject(new Error('Error scraping location page \"' + id + '\"'));\n      }\n    });\n  });\n};\n\nvar scrape = function (html) {\n  try {\n    var dataString = html.match(dataExp)[1];\n    var json = JSON.parse(dataString);\n  } catch (e) {\n    if (process.env.NODE_ENV != 'production') {\n      console.error('The HTML returned from instagram was not suitable for scraping');\n    }\n\n    return null;\n  }\n\n  return json;\n};","map":{"version":3,"sources":["/home/kraven/Documents/oksana/node_modules/instagram-scraping/index.js"],"names":["request","require","Promise","async","userURL","listURL","postURL","locURL","dataExp","exports","scrapeUserPage","username","resolve","reject","Error","err","response","body","data","scrape","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","count","edges","waterfall","callback","medias","forEach","post","node","__typename","push","scrapePostData","results","total","length","deepScrapeTagPage","tag","scrapeTag","then","tagPage","map","media","i","len","scrapePostCode","shortcode","postPage","location","has_public_page","scrapeLocation","id","locationPage","catch","console","log","options","url","headers","TagPage","hashtag","edge_hashtag_to_media","scrapedData","media_id","text","edge_media_to_caption","comment_count","edge_media_to_comment","like_count","edge_liked_by","display_url","owner_id","owner","date","taken_at_timestamp","thumbnail","thumbnail_src","thumbnail_resource","thumbnail_resources","is_video","video_view_count","code","PostPage","shortcode_media","LocationsPage","html","dataString","match","json","JSON","parse","e","process","env","NODE_ENV","error"],"mappings":"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","sourcesContent":["var request = require('request'),\n    Promise = require('bluebird'),\n    async = require('async');\n\nvar userURL = 'https://www.instagram.com/',\n    listURL = 'https://www.instagram.com/explore/tags/',\n    postURL = 'https://www.instagram.com/p/',\n    locURL = 'https://www.instagram.com/explore/locations/',\n    dataExp = /window\\._sharedData\\s?=\\s?({.+);<\\/script>/;\n\nexports.scrapeUserPage = function (username) {\n    return new Promise(function (resolve, reject) {\n        if (!username) return reject(new Error('Argument \"username\" must be specified'));\n        request(userURL + username, function (err, response, body) {\n            var data = scrape(body);\n            if (data && data.entry_data &&\n                data.entry_data.ProfilePage &&\n                data.entry_data.ProfilePage[0] &&\n                data.entry_data.ProfilePage[0].graphql &&\n                data.entry_data.ProfilePage[0].graphql.user &&\n                data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media &&\n                data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.count > 0 && data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges) {\n                var edges = data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges;\n                async.waterfall([\n                    (callback) => {\n                        var medias = [];\n                        edges.forEach((post) => {\n                            if (post.node.__typename === 'GraphImage'||post.node.__typename === 'GraphSidecar' || post.node.__typename === 'GraphVideo') {\n                                medias.push(exports.scrapePostData(post))\n                            }\n                        });\n                        callback(null, medias);\n                    }\n                ], (err, results) => {\n                    resolve({\n                        total: results.length,\n                        medias: results,\n                        user: data.entry_data.ProfilePage[0].graphql.user\n                    })\n                })\n            }\n            else {\n                reject(new Error('Error scraping user page \"' + username + '\"'));\n            }\n        });\n    });\n};\n\nexports.deepScrapeTagPage = function (tag) {\n    return new Promise(function (resolve, reject) {\n        exports.scrapeTag(tag).then(function (tagPage) {\n            return Promise.map(tagPage.medias, function (media, i, len) {\n                return exports.scrapePostCode(media.shortcode).then(function (postPage) {\n                    tagPage.medias[i] = postPage;\n                    if ((typeof postPage.location !== \"undefined\") && postPage.location.has_public_page) {\n                        return exports.scrapeLocation(postPage.location.id).then(function (locationPage) {\n                            tagPage.media[i].location = locationPage;\n                        })\n                            .catch(function (err) {\n                                console.log(\"An error occurred calling scrapeLocation inside deepScrapeTagPage\" + \":\" + err);\n                            });\n                    }\n                })\n                    .catch(function (err) {\n                        console.log(\"An error occurred calling scrapePostPage inside deepScrapeTagPage\" + \":\" + err);\n                    });\n            })\n                .then(function () { resolve(tagPage); })\n                .catch(function (err) {\n                    console.log(\"An error occurred resolving tagPage inside deepScrapeTagPage\" + \":\" + err);\n                });\n        })\n            .catch(function (err) {\n                console.log(\"An error occurred calling scrapeTagPage inside deepScrapeTagPage\" + \":\" + err);\n            });\n    });\n};\n\nexports.scrapeTag = function (tag) {\n    return new Promise(function (resolve, reject) {\n        if (!tag) return reject(new Error('Argument \"tag\" must be specified'));\n        var options = {\n            url: listURL + tag,\n            headers: {\n                'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.3 (KHTML, like Gecko) Version/8.0 Mobile/12A4345d Safari/600.1.4'\n            }\n        };\n        request(options, function (err, response, body) {\n            if (err) return reject(err);\n\n            var data = scrape(body);\n            var media = data.entry_data && data.entry_data.TagPage && data.entry_data.TagPage[0].graphql.hashtag.edge_hashtag_to_media;\n\n            if (data && media) {\n                var edges = media.edges;\n\n                async.waterfall([\n                    (callback) => {\n                        var medias = [];\n                        edges.forEach((post) => {\n                            medias.push(exports.scrapePostData(post))\n                        });\n                        callback(null, medias);\n                    }\n                ], (err, results) => {\n                    resolve({\n                        total: results.length,\n                        medias: results\n                    })\n                })\n\n            }\n            else {\n                reject(new Error('Error scraping tag page \"' + tag + '\"'));\n            }\n        })\n    });\n};\n\nexports.scrapePostData = function (post) {\n    var scrapedData = {\n        media_id: post.node.id,\n        shortcode: post.node.shortcode,\n        text: post.node.edge_media_to_caption.edges[0] && post.node.edge_media_to_caption.edges[0].node.text,\n        comment_count: post.node.edge_media_to_comment.count,\n        like_count: post.node.edge_liked_by.count,\n        display_url: post.node.display_url,\n        owner_id: post.node.owner.id,\n        date: post.node.taken_at_timestamp,\n        thumbnail: post.node.thumbnail_src,\n        thumbnail_resource: post.node.thumbnail_resources,\n        is_video: post.node.is_video\n    }\n\n    if (post.node.is_video) {\n        scrapedData.video_view_count = post.node.video_view_count;\n    }\n\n    return scrapedData;\n}\n\nexports.scrapePostCode = function (code) {\n    return new Promise(function (resolve, reject) {\n        if (!code) return reject(new Error('Argument \"code\" must be specified'));\n\n        request(postURL + code, function (err, response, body) {\n            if (err) return reject(err);\n\n            var data = scrape(body);\n            if (data && data.entry_data &&\n                data.entry_data.PostPage[0] &&\n                data.entry_data.PostPage[0].graphql &&\n                data.entry_data.PostPage[0].graphql.shortcode_media) {\n                resolve(data.entry_data.PostPage[0].graphql.shortcode_media);\n            }\n            else {\n                reject(new Error('Error scraping post page \"' + code + '\"'));\n            }\n        });\n    });\n}\n\nexports.scrapeLocation = function (id) {\n    return new Promise(function (resolve, reject) {\n        if (!id) return reject(new Error('Argument \"id\" must be specified'));\n\n        request(locURL + id, function (err, response, body) {\n            var data = scrape(body);\n\n            if (data && data.entry_data && (typeof data.entry_data.LocationsPage !== \"undefined\")) {\n                resolve(data.entry_data.LocationsPage[0].location);\n            }\n            else {\n                reject(new Error('Error scraping location page \"' + id + '\"'));\n            }\n        });\n    });\n}\nvar scrape = function (html) {\n    try {\n        var dataString = html.match(dataExp)[1];\n        var json = JSON.parse(dataString);\n    }\n    catch (e) {\n        if (process.env.NODE_ENV != 'production') {\n            console.error('The HTML returned from instagram was not suitable for scraping');\n        }\n        return null\n    }\n\n    return json;\n}\n"]},"metadata":{},"sourceType":"script"}
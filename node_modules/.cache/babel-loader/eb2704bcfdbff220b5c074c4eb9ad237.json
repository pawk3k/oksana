{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Documents/oksana/src/components/elements/ParallaxMy.js\";\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MenuCont from \"../MenuButton/MenuCont\";\n// import { Parallax, ParallaxLayer } from 'react-spring/addons'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; // Little helpers ...\n// const url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`;\n// const url2 = (name, wrap = false) => `${wrap ? 'url(' : ''}${name}.svg${wrap ? ')' : ''}`;\n\nconst Pink = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#FF6AC1'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, children);\n\nconst Yellow = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#EFF59B'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, children);\n\nconst Lightblue = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#9AEDFE'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, children);\n\nconst Green = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#57EE89'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, children);\n\nconst Blue = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#57C7FF'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, children);\n\nconst Gray = ({\n  children\n}) => React.createElement(\"span\", {\n  style: {\n    color: '#909090'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, children);\n\nconst url = document.location.href;\n\nfunction Home() {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Home\");\n}\n\nfunction About() {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"About\");\n}\n\nfunction Users() {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Users\");\n}\n\nclass ParallaxMy extends React.Component {\n  render() {\n    return (// <Parallax ref={ref => (this.parallax = ref)} pages={4}>\n      //\n      //     <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n      //     <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n      // //\n      //     <ParallaxLayer offset={0} speed={0} factor={3} style={{ backgroundImage: url2('stars', true), backgroundSize: 'cover' }} />\n      //\n      //     <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n      //         <img src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n      //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n      //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n      //         <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer offset={2.5} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n      //         <img src={url2('nef',true)} style={{ width: '60%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer\n      //         offset={2}\n      //         speed={-0.3}\n      //         style={{\n      //             backgroundSize: '80%',\n      //             backgroundPosition: 'center',\n      //             backgroundImage: url(\"nef.svg\")\n      //         }}\n      //     />\n      //\n      //     <ParallaxLayer\n      //         offset={0}\n      //         speed={0.1}\n      //         onClick={() => this.parallax.scrollTo(1)}\n      //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      //         <img src={url('server')} style={{ width: '20%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer\n      //         offset={1}\n      //         speed={0.1}\n      //         onClick={() => this.parallax.scrollTo(2)}\n      //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      //         <img src={url('bash')} style={{ width: '40%' }} />\n      //     </ParallaxLayer>\n      //\n      //     <ParallaxLayer\n      //         offset={2}\n      //         speed={-0}\n      //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n      //         onClick={() => this.parallax.scrollTo(0)}>\n      //         <img src={url('clients-main')} style={{ width: '40%' }} />\n      //     </ParallaxLayer>\n      // </Parallax>\n      React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Parallax, {\n        pages: 2,\n        scrolling: true,\n        vertical: true,\n        ref: ref => this.parallax = ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ParallaxLayer, {\n        offset: 1,\n        speed: 1,\n        style: {\n          backgroundColor: '#805E73'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(ParallaxLayer, {\n        offset: 2,\n        speed: 1,\n        style: {\n          backgroundColor: '#87BCDE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(ParallaxLayer, {\n        offset: 0,\n        speed: 0.1 // onClick={() => this.parallax.scrollTo(1)}\n        ,\n        style: {\n          backgroundImage: 'url(' + require('./nef.svg') + ')',\n          backgroundSize: 'cover',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"About\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Users\")))), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/about\",\n        render: () => {\n          React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"Kek\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Users, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))))), React.createElement(ParallaxLayer, {\n        offset: 1,\n        speed: 0.1,\n        onClick: () => this.parallax.scrollTo(0),\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(ParallaxLayer, {\n        offset: 2,\n        speed: 0.1,\n        onClick: () => this.parallax.scrollTo(0),\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default ParallaxMy;","map":{"version":3,"sources":["/home/kraven/Documents/oksana/src/components/elements/ParallaxMy.js"],"names":["Parallax","ParallaxLayer","React","ReactDOM","MenuCont","BrowserRouter","Router","Switch","Route","Link","Pink","children","color","Yellow","Lightblue","Green","Blue","Gray","url","document","location","href","Home","About","Users","ParallaxMy","Component","render","ref","parallax","backgroundColor","backgroundImage","require","backgroundSize","display","alignItems","justifyContent","scrollTo"],"mappings":"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","sourcesContent":["import {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport MenuCont from \"../MenuButton/MenuCont\";\nimport './nef.svg'\n// import { Parallax, ParallaxLayer } from 'react-spring/addons'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n// Little helpers ...\n// const url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`;\n// const url2 = (name, wrap = false) => `${wrap ? 'url(' : ''}${name}.svg${wrap ? ')' : ''}`;\n\n\nconst Pink = ({ children }) => <span style={{ color: '#FF6AC1' }}>{children}</span>\nconst Yellow = ({ children }) => <span style={{ color: '#EFF59B' }}>{children}</span>\nconst Lightblue = ({ children }) => <span style={{ color: '#9AEDFE' }}>{children}</span>\nconst Green = ({ children }) => <span style={{ color: '#57EE89' }}>{children}</span>\nconst Blue = ({ children }) => <span style={{ color: '#57C7FF' }}>{children}</span>\nconst Gray = ({ children }) => <span style={{ color: '#909090' }}>{children}</span>\nconst url = document.location.href;\n\nfunction Home() {\n    return <h2>Home</h2>;\n}\n\nfunction About() {\n    return <h2>About</h2>;\n}\n\nfunction Users() {\n    return <h2>Users</h2>;\n}\n\nclass ParallaxMy extends React.Component {\n    render() {\n        return (\n\n\n            // <Parallax ref={ref => (this.parallax = ref)} pages={4}>\n            //\n            //     <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n            //     <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n            // //\n            //     <ParallaxLayer offset={0} speed={0} factor={3} style={{ backgroundImage: url2('stars', true), backgroundSize: 'cover' }} />\n            //\n            //     <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n            //         <img src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n            //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n            //         <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n            //         <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer offset={2.5} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n            //         <img src={url2('nef',true)} style={{ width: '60%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer\n            //         offset={2}\n            //         speed={-0.3}\n            //         style={{\n            //             backgroundSize: '80%',\n            //             backgroundPosition: 'center',\n            //             backgroundImage: url(\"nef.svg\")\n            //         }}\n            //     />\n            //\n            //     <ParallaxLayer\n            //         offset={0}\n            //         speed={0.1}\n            //         onClick={() => this.parallax.scrollTo(1)}\n            //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            //         <img src={url('server')} style={{ width: '20%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer\n            //         offset={1}\n            //         speed={0.1}\n            //         onClick={() => this.parallax.scrollTo(2)}\n            //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            //         <img src={url('bash')} style={{ width: '40%' }} />\n            //     </ParallaxLayer>\n            //\n            //     <ParallaxLayer\n            //         offset={2}\n            //         speed={-0}\n            //         style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n            //         onClick={() => this.parallax.scrollTo(0)}>\n            //         <img src={url('clients-main')} style={{ width: '40%' }} />\n            //     </ParallaxLayer>\n            // </Parallax>\n\n\n\n\n\n            <Router>\n            <Parallax pages={2} scrolling={true} vertical ref={ref => (this.parallax = ref)}>\n                <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n                <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n\n                <ParallaxLayer\n                    offset={0}\n                    speed={0.1}\n                    // onClick={() => this.parallax.scrollTo(1)}\n                    style={{backgroundImage: 'url(' + require('./nef.svg') + ')', backgroundSize: 'cover' ,display: 'flex', alignItems: 'center', justifyContent: 'top' }}>\n                        <div>\n                            <nav>\n                                <ul>\n                                    <li>\n                                        <Link to=\"/\">Home</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/about\">About</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/users\">Users</Link>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                            <Switch>\n                                <Route path=\"/about\" render={ ()=>{<p>Kek</p>}}/>\n                                    {/*<About />*/}\n                                {/*</Route>*/}\n                                <Route path=\"/users\">\n                                    <Users />\n                                </Route>\n                                <Route path=\"/\">\n                                    <Home />\n                                </Route>\n                            </Switch>\n                        </div>\n\n                    {/*<img src={url('bash')} style={{ width: '40%' }} />*/}\n                </ParallaxLayer>\n                <ParallaxLayer\n                    offset={1}\n                    speed={0.1}\n                    onClick={() => this.parallax.scrollTo(0)}\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    {/*<img src={url('clients-main')} style={{ width: '40%' }} />*/}\n                </ParallaxLayer>\n                {/*<MenuCont/>*/}\n\n                <ParallaxLayer\n                    offset={2}\n                    speed={0.1}\n                    onClick={() => this.parallax.scrollTo(0)}\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                </ParallaxLayer>\n\n            </Parallax>\n            </Router>\n\n        )\n    }\n}\nexport  default ParallaxMy;\n"]},"metadata":{},"sourceType":"module"}
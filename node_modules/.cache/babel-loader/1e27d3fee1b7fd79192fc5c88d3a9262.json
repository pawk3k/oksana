{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Documents/VSJavascript/oksana/src/components/Template/TemplatesContainer.js\";\nimport React, { Component } from \"react\";\nimport Template from \"./Template\";\nimport { connect } from 'react-redux';\n\nclass TemplatesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.dress = () => {\n      this.props.dispatch({\n        type: 'DRESS'\n      });\n    };\n  }\n\n  render() {\n    const full = this.props.display_arr.map((x, index) => {\n      return React.createElement(\"td\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Template, {\n        image: x.img_url,\n        text: x.caption,\n        my_key: x.key,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    });\n    let new_arr = [];\n    var i,\n        j,\n        temparray,\n        chunk = 3;\n\n    for (i = 0, j = full.length; i < j - 4; i += chunk) {\n      temparray = full.slice(i, i + chunk);\n      new_arr.push(React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, temparray.map(x => {\n        return x;\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, new_arr, \";\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count,\n    display_arr: state.display_arr\n  };\n}\n\nexport default connect(mapStateToProps)(TemplatesContainer);","map":{"version":3,"sources":["/home/kraven/Documents/VSJavascript/oksana/src/components/Template/TemplatesContainer.js"],"names":["React","Component","Template","connect","TemplatesContainer","dress","props","dispatch","type","render","full","display_arr","map","x","index","img_url","caption","key","new_arr","i","j","temparray","chunk","length","slice","push","mapStateToProps","state","count"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA0C;AAAA;AAAA;;AAAA,SAGtCI,KAHsC,GAG9B,MAAM;AACV,WAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB;AACH,KALqC;AAAA;;AAMtCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,CAAD,EAAGC,KAAH,KACxC;AACI,aACI;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,CAAC,CAACE,OAAnB;AAA4B,QAAA,IAAI,EAAEF,CAAC,CAACG,OAApC;AAA6C,QAAA,MAAM,EAAEH,CAAC,CAACI,GAAvD;AAA4D,QAAA,GAAG,EAAEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAPY,CAAb;AAQA,QAAII,OAAO,GAAG,EAAd;AACA,QAAIC,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQC,SAAR;AAAA,QAAkBC,KAAK,GAAG,CAA1B;;AACA,SAAKH,CAAC,GAAC,CAAF,EAAIC,CAAC,GAACV,IAAI,CAACa,MAAhB,EAAwBJ,CAAC,GAACC,CAAC,GAAC,CAA5B,EAA+BD,CAAC,IAAEG,KAAlC,EAAyC;AACrCD,MAAAA,SAAS,GAAGX,IAAI,CAACc,KAAL,CAAWL,CAAX,EAAaA,CAAC,GAACG,KAAf,CAAZ;AACAJ,MAAAA,OAAO,CAACO,IAAR,CACI;AAAI,QAAA,GAAG,EAAEN,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQE,SAAS,CAACT,GAAV,CAAeC,CAAC,IAAG;AACf,eAAOA,CAAP;AACH,OAFD,CAFR,CADJ;AASH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,OADL,MADJ;AAKH;;AAnCqC;;AAqC1C,SAASQ,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAQ;AACJC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADT;AAEJjB,IAAAA,WAAW,EAACgB,KAAK,CAAChB;AAFd,GAAR;AAIH;;AAID,eAAgBR,OAAO,CAACuB,eAAD,CAAP,CAAyBtB,kBAAzB,CAAhB","sourcesContent":["import React,{Component} from \"react\";\nimport Template from \"./Template\";\nimport { connect } from 'react-redux';\n\n\nclass TemplatesContainer extends Component{\n\n\n    dress = () => {\n        this.props.dispatch({ type: 'DRESS' });\n    };\n    render() {\n        const full = this.props.display_arr.map((x,index)=>\n        {\n            return (\n                <td key={index}>\n                    <Template image={x.img_url} text={x.caption} my_key={x.key} key={index} />\n                </td>\n            );\n        });\n        let new_arr = [];\n        var i,j,temparray,chunk = 3;\n        for (i=0,j=full.length; i<j-4; i+=chunk) {\n            temparray = full.slice(i,i+chunk);\n            new_arr.push(\n                <tr key={i}>\n                    {\n                        temparray.map( x =>{\n                            return x;\n                        } )\n                    }\n                </tr>\n            )\n        }\n\n        return (\n            <div>\n                {new_arr};\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return( {\n        count: state.count,\n        display_arr:state.display_arr\n    });\n}\n\n\n\nexport default  connect(mapStateToProps)(TemplatesContainer);"]},"metadata":{},"sourceType":"module"}
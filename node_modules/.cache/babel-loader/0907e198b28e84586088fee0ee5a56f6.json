{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Documents/oksana/src/index.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport image from './logo192.png';\nimport * as PIXI from 'pixi.js';\nvar width = window.offsetWidth;\nvar height = window.offsetHeight;\nvar playground = document.getElementById('pxrender');\nvar canvas;\nvar ratio = 150 / 830;\nvar count = 0;\nvar raf;\nvar renderer = PIXI.autoDetectRenderer(width, height, {\n  transparent: true\n});\nrenderer.autoResize = true;\nvar tp, preview;\nvar displacementSprite, displacementFilter, stage;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playground: null\n    };\n\n    this.setScene = url => {\n      playground.appendChild(renderer.view);\n      stage = new PIXI.Container();\n      tp = PIXI.Texture.fromImage(url);\n      preview = new PIXI.Sprite(tp);\n      preview.anchor.x = 0;\n      displacementSprite = PIXI.Sprite.fromImage('https://res.cloudinary.com/dvxikybyi/image/upload/v1486634113/2yYayZk_vqsyzx.png');\n      displacementSprite.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n      displacementFilter = new PIXI.filters.DisplacementFilter(displacementSprite);\n      displacementSprite.scale.y = 0.6;\n      displacementSprite.scale.x = 0.6;\n      stage.addChild(displacementSprite);\n      stage.addChild(preview);\n      this.animate();\n    };\n\n    this.removeScene = () => {\n      cancelAnimationFrame(raf);\n      stage.removeChildren();\n      stage.destroy(true);\n      playground.removeChild(canvas);\n    };\n\n    this.animate = () => {\n      raf = requestAnimationFrame(this.animate);\n      displacementSprite.x = count * 10;\n      displacementSprite.y = count * 10;\n      count += 0.05;\n      stage.filters = [displacementFilter];\n      renderer.render(stage);\n      canvas = playground.querySelector('canvas');\n    };\n  }\n\n  componentDidMount() {\n    this.setScene(image);\n  }\n\n  render() {\n    this.setScene(image);\n    return React.createElement(\"div\", {\n      ref: \"pxrender\",\n      id: \"pxrender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kraven/Documents/oksana/src/index.js"],"names":["React","Component","image","PIXI","width","window","offsetWidth","height","offsetHeight","playground","document","getElementById","canvas","ratio","count","raf","renderer","autoDetectRenderer","transparent","autoResize","tp","preview","displacementSprite","displacementFilter","stage","App","state","setScene","url","appendChild","view","Container","Texture","fromImage","Sprite","anchor","x","texture","baseTexture","wrapMode","WRAP_MODES","REPEAT","filters","DisplacementFilter","scale","y","addChild","animate","removeScene","cancelAnimationFrame","removeChildren","destroy","removeChild","requestAnimationFrame","render","querySelector","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport image from './logo192.png';\nimport * as PIXI from 'pixi.js'\n\nvar width = window.offsetWidth;\nvar height = window.offsetHeight;\nvar playground = document.getElementById('pxrender');\nvar canvas;\nvar ratio = 150 / 830;\nvar count = 0;\nvar raf;\n\nvar renderer = PIXI.autoDetectRenderer(width, height,{transparent:true});\nrenderer.autoResize = true;\nvar tp, preview;\nvar displacementSprite,\n    displacementFilter,\n    stage;\n\nclass App extends Component {\n\n  state = {\n    playground: null\n  }\n  componentDidMount() {\n      this.setScene(image);\n  }\n\n  setScene = (url) => {\n    playground.appendChild(renderer.view);\n    stage = new PIXI.Container();\n    tp = PIXI.Texture.fromImage(url);\n    preview = new PIXI.Sprite(tp);\n    preview.anchor.x = 0;\n    displacementSprite = PIXI.Sprite.fromImage('https://res.cloudinary.com/dvxikybyi/image/upload/v1486634113/2yYayZk_vqsyzx.png');\n    displacementSprite.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n    displacementFilter = new PIXI.filters.DisplacementFilter(displacementSprite);\n    displacementSprite.scale.y = 0.6;\n    displacementSprite.scale.x = 0.6;\n    stage.addChild(displacementSprite);\n    stage.addChild(preview);\n    this.animate();\n  }\n\n  removeScene = () => {\n    cancelAnimationFrame(raf);\n    stage.removeChildren();\n    stage.destroy(true);\n    playground.removeChild(canvas);\n  }\n\n  animate = () => {\n    raf = requestAnimationFrame(this.animate);\n    displacementSprite.x = count*10;\n    displacementSprite.y = count*10;\n    count += 0.05;\n    stage.filters = [displacementFilter];\n    renderer.render(stage);\n    canvas = playground.querySelector('canvas');\n  }\n\n  render() {\n\n    this.setScene(image);\n\n    return (\n      <div ref=\"pxrender\" id=\"pxrender\">\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
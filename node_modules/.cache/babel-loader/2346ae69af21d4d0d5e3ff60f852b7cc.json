{"ast":null,"code":"var _jsxFileName = \"/home/kraven/Videos/oksana/src/components/Title/Title.js\";\nimport \"./Title.cssTitle.css\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Title = props => {\n  // its like dipatch\n  const dispatch = useDispatch(); //Use Selector is like map state to props\n\n  const counter = useSelector(state => state.count);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"parallax\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sq\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Scroll Up and Down this page to see the parallax scrolling effect. This div is just here to enable scrolling. Tip: Try to remove the background-attachment property to remove the scrolling effect.\"));\n};\n\nexport default Title;","map":{"version":3,"sources":["/home/kraven/Videos/oksana/src/components/Title/Title.js"],"names":["React","useState","useDispatch","useSelector","Title","props","dispatch","counter","state","count"],"mappings":";AAAA,OAAO,sBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAG;AAClB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFkB,CAGlB;;AACA,QAAMK,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA3B;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2MAJJ,CADJ;AAYH,CAjBD;;AAkBA,eAAeL,KAAf","sourcesContent":["import \"./Title.cssTitle.css\"\nimport React, { useState } from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Title = props =>{\n    // its like dipatch\n    const dispatch = useDispatch();\n    //Use Selector is like map state to props\n    const counter = useSelector(state => state.count);\n    return (\n        <div>\n            <div className=\"parallax\"/>\n\n\n            <div className=\"sq\">\n                Scroll Up and Down this page to see the parallax scrolling effect.\n                This div is just here to enable scrolling.\n                Tip: Try to remove the background-attachment property to remove the scrolling effect.\n            </div>\n        </div>\n    )\n};\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}